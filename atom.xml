<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Python Information</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://qazasdsdqaza.github.io/"/>
  <updated>2019-05-28T17:43:57.158Z</updated>
  <id>https://qazasdsdqaza.github.io/</id>
  
  <author>
    <name>Cardistry Lee</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Django基础篇(03)</title>
    <link href="https://qazasdsdqaza.github.io/2019/05/29/3/"/>
    <id>https://qazasdsdqaza.github.io/2019/05/29/3/</id>
    <published>2019-05-28T17:13:00.000Z</published>
    <updated>2019-05-28T17:43:57.158Z</updated>
    
    <content type="html"><![CDATA[<h2 id="创建视图之Hello-World"><a href="#创建视图之Hello-World" class="headerlink" title="创建视图之Hello World"></a>创建视图之Hello World</h2><p><strong>Django的视图是定义在应用的views.py中的</strong></p><ol><li><p>进入创建好的应用目录 找到views.py并在views.py中编写视图代码 比如Hello World</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponse</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">(reqeust)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> HttpResponse(<span class="string">'Hello World'</span>)</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="说明："><a href="#说明：" class="headerlink" title="说明："></a>说明：</h3><ul><li>视图函数的第一个传入参数必须定义，用于接收Django构造的包含了请求数据的<strong>HttpReqeust</strong>对象，通常名为<strong>request</strong>。</li><li>视图函数的返回值必须为一个响应对象，可以将要返回的字符串数据放到一个<strong>HttpResponse</strong>对象中。</li></ul></li><li><p>完成以上步骤后视图就算写完了 接下来就要去定义路由</p><ul><li><p>在应用目录下新建一个urls.py用于保存该应用的路由</p></li><li><p>打开urls.py 定义路由信息</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.conf.urls <span class="keyword">import</span> url</span><br><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> views</span><br><span class="line"></span><br><span class="line"><span class="comment"># urlpatterns是被Django自动识别的路由列表变量</span></span><br><span class="line">urlpatterns = [</span><br><span class="line">    <span class="comment"># url中第一部分为正则表达式, 后半部分为指定想要对应的视图</span></span><br><span class="line">    url(<span class="string">r'^index/$'</span>, views.index),</span><br><span class="line">]</span><br></pre></td></tr></table></figure></li></ul></li></ol><ol start="3"><li><p>然后我们就要去项目的总路由demo/urls.py里去添加一下应用的路由数据</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.conf.urls <span class="keyword">import</span> url, include</span><br><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    url(<span class="string">r'^admin/'</span>, admin.site.urls), <span class="comment"># Django默认包含的</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 这个是我们需要添加的路由</span></span><br><span class="line">    url(<span class="string">r'^users/'</span>, include(<span class="string">'users.urls'</span>)),  <span class="comment"># include('要添加的应用.urls')</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure><ul><li>使用include来将子应用users里的全部路由包含进工程路由中</li><li><strong>r’^users/‘</strong> 决定了users子应用的所有路由都已<strong>/users/</strong>开头，如我们刚定义的视图index，其最终的完整访问路径为<strong>/users/index/</strong>。</li></ul></li><li><p>启动运行</p><ul><li>终端输入<code>python manage.py runserver</code></li><li>在浏览器中输入网址<strong>127.0.0.1:8000/users/index/</strong> 即可看到返回的信息</li></ul></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;创建视图之Hello-World&quot;&gt;&lt;a href=&quot;#创建视图之Hello-World&quot; class=&quot;headerlink&quot; title=&quot;创建视图之Hello World&quot;&gt;&lt;/a&gt;创建视图之Hello World&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;Django的视图是定义在应用的views.py中的&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;进入创建好的应用目录 找到views.py并在views.py中编写视图代码 比如Hello World&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; django.http &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; HttpResponse&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(reqeust)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; HttpResponse(&lt;span class=&quot;string&quot;&gt;&#39;Hello World&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;&lt;/ol&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Django基础篇(02)</title>
    <link href="https://qazasdsdqaza.github.io/2019/05/29/2/"/>
    <id>https://qazasdsdqaza.github.io/2019/05/29/2/</id>
    <published>2019-05-28T16:55:17.000Z</published>
    <updated>2019-05-28T17:43:33.299Z</updated>
    
    <content type="html"><![CDATA[<h2 id="创建App"><a href="#创建App" class="headerlink" title="创建App"></a>创建App</h2><p><strong>在Web应用中，通常有一些业务功能模块是在不同的项目中都可以复用的，故在开发中通常将工程项目拆分为不同的子功能模块，各功能模块间可以保持相对的独立，在其他工程项目中需要用到某个特定功能模块时，可以将该模块代码整体复制过去，达到复用。</strong></p><a id="more"></a><ol><li>在Django中创建app可通过<code>python manage.py startapp 应用名称</code> <ul><li>例如<code>python manage.py startapp users</code></li></ul></li><li><p>执行命令后 会多出一个users目录</p><ul><li><strong>admin.py</strong> 文件跟网站的后台管理站点配置相关。</li><li><strong>apps.py</strong> 文件用于配置当前子应用的相关信息。</li><li><strong>migrations</strong> 目录用于存放数据库迁移历史文件。</li><li><strong>models.py</strong> 文件用户保存数据库模型类。</li><li><strong>tests.py</strong> 文件用于开发测试用例，编写单元测试。</li><li><strong>views.py</strong> 文件用于编写Web应用视图。</li></ul></li><li><p>创建出来的应用 虽然在Django目录中 但还不能直接使用 需要在Django的settings.py里面注册安装后才能使用</p></li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">INSTALLED_APPS = [</span><br><span class="line">    <span class="string">'djano.contrib.admin'</span>,</span><br><span class="line">    <span class="string">'djano.contrib.auth'</span>,</span><br><span class="line">    <span class="string">'djano.contrib.contenttypes'</span>,</span><br><span class="line">    <span class="string">'djano.contrib.sessions'</span>,</span><br><span class="line">    <span class="string">'djano.contrib.messages'</span>,</span><br><span class="line">    <span class="string">'djano.contrib.staticfiles'</span>,</span><br><span class="line">    <span class="comment"># 加上下面这句话 即是将子应用的配置信息文件apps.py中的Config类添加到INSTALLED_APPS列表中</span></span><br><span class="line">    <span class="string">'users.apps.UsersConfig'</span>,</span><br><span class="line">]</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;创建App&quot;&gt;&lt;a href=&quot;#创建App&quot; class=&quot;headerlink&quot; title=&quot;创建App&quot;&gt;&lt;/a&gt;创建App&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;在Web应用中，通常有一些业务功能模块是在不同的项目中都可以复用的，故在开发中通常将工程项目拆分为不同的子功能模块，各功能模块间可以保持相对的独立，在其他工程项目中需要用到某个特定功能模块时，可以将该模块代码整体复制过去，达到复用。&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Django基础篇(01)</title>
    <link href="https://qazasdsdqaza.github.io/2019/05/28/1/"/>
    <id>https://qazasdsdqaza.github.io/2019/05/28/1/</id>
    <published>2019-05-27T16:05:33.000Z</published>
    <updated>2019-05-28T17:43:19.922Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Django搭建工程"><a href="#Django搭建工程" class="headerlink" title="Django搭建工程"></a>Django搭建工程</h2><a id="more"></a><ul><li><p>mkvirtualenv -p python3 django(此步骤可选)</p></li><li><p><code>pip install django</code></p></li><li><p>workon django(如果没执行第一步创建虚拟环境 则可跳过此步骤)</p></li><li><p>django-admin startproject demo (执行后，会多出一个新目录名为demo，此即为新创建的工程目录)</p></li><li><p>进入demo目录后 会有一个和项目目录同名的文件夹demo和manage.py文件</p></li><li><p>同名demo目录内部各文件说明：</p><ul><li><strong>settings.py</strong> 是项目的整体配置文件。</li><li><strong>urls.py</strong> 是项目的URL配置文件。</li><li><strong>wsgi.py</strong> 是项目与WSGI兼容的Web服务器入口。</li><li><strong>manage.py</strong> 是项目管理文件，通过它管理项目。</li></ul></li><li><p>此时可在终端运行<code>python manage.py runserver ip:port</code>来启动服务器 不指定ip和port默认运行在127.0.0.1:8000</p></li></ul><p><img src="/2019/05/28/1/123.png" alt="运行成功"></p><p>在浏览器地址栏输入127.0.0.1:8000或者localhost:8000后回车 出现上图则表示项目搭建成功</p><p><strong>温馨提示</strong></p><ul><li>jango默认工作在调式Debug模式下，如果增加、修改、删除文件，服务器会自动重启。</li><li>按ctrl+c停止服务器。</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Django搭建工程&quot;&gt;&lt;a href=&quot;#Django搭建工程&quot; class=&quot;headerlink&quot; title=&quot;Django搭建工程&quot;&gt;&lt;/a&gt;Django搭建工程&lt;/h2&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
